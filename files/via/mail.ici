#!/user/sev/bin/ici
# mail parser

auto names = [struct laws = "zakon", vr_p = "postvr", vr_d = "deklar",
		km_p = "postkm", km_d = "dekret", km_r = "rozpkm",
		pu_u = "ukprez", pu_r = "rozp", vr_pr_u = "ukprz",
		vr_pr_p = "postpr", km_m = "norm", km_nbu = "bank",
		misc = "add", km_dpi = "dpi", rus = "rus", ugod = "ugod"];

auto exist = [struct laws = 0, vr_p = 0, vr_d = 0, km_p = 0,
		km_d = 0, km_r = 0, pu_u = 0, pu_r = 0,
		vr_pr_u = 0, vr_pr_p = 0, km_m = 0, km_nbu = 0, misc = 0,
		km_dpi = 0, rus = 0, ugod = 0];

auto dirfile = "glmenu.dir";
auto mountdir = "/user/sev/hyp/patch/zakon/zakon/";

auto article = array();
auto numart = 0;

auto infile;
auto lines;

auto i;

auto groupname, tmpstr, s, c1;
auto subject, number, date;

auto filename;
auto tmpfile;
auto double = 0;

auto ugod_num = 0, ugod_date;

if(argc < 2)
  fail("No filename");

if(argv[2] != "-n" && argv[3] != "-n")
{
  printf("Checking...");
  flush(stdout);
  infile = fopen(argv[1], "r");

  while(1)
  {
    s = getline(infile);
    if(s == NULL)
      break;

    if(interval(s, 0, 21) == "Newsgroups: zgўk.law.")
      if(s ~ $regexp(","))
      {
        printf("Double %s\n", interval(s, 21));
        double++;
      }
  }
  close(infile);
  printf("Done\n");

  if(double)
    fail(sprintf("I have %d double", double));

  printf("Translating...");
  flush(stdout);
  system(sprintf("trans %s", argv[1]));
  printf("Done\n");
}
infile = fopen(argv[1], "r");


system("mnt /user/sev/hyp/patch/zakon/zakon; sleep 2");

while(1)
{
  s = getline(infile);
  if(s == NULL)
    break;

  if(interval(s, 0, 21) == "Newsgroups: zgўk.law.")
  {
    groupname = interval(s, 21) ~~ $regexp("([a-z.ў]*)");
    tmpstr = "";
    for(i = 0; i < sizeof(groupname); i++)
      if(groupname[i] == ".")
        tmpstr += "_";
      else
        if(groupname[i] == "ў")
          tmpstr += "i";
        else
          tmpstr += groupname[i];
    groupname = tmpstr;
    continue;
  }
  if(interval(s, 0, 16) == "Subject: [NEWS] ")
  {
    subject = interval(s, 16);

    if(groupname != "ugod")
    {
      if (((tmpstr = subject ~~ $regexp("(\\([N\x8c\xbcМ].*\\))")) == NULL)
         && ((tmpstr = subject ~~
	  $regexp(" *([0-9][0-9]*  *вўд  *[0-9.][0-9.]*[789][0-9])")) == NULL) &&
	((tmpstr = subject ~~
	  $regexp (" *([0-9][0-9]*  *[0-9][0-9].[0-9][0-9].[789][0-9])")) ==
			NULL))
      {
        printf("\nBad format:\n%s\nEnter number: ", subject);
        number = getline();
        printf("Enter date (dd.mm.yy): ");
        tmpstr = getline();
      }
      else
      {
        /* truncate subject */
        if (tmpstr ~ $regexp("\\("))
        {
          i = sizeof(subject);
          while(subject[i--] != "(");
          subject = interval(subject, 0, i)+".";
	}

        /* truncate spaces */
        c1 = tmpstr[0];
        for(i = 1; i < sizeof(tmpstr); i++)
          if(tmpstr[i] == " "||tmpstr[i] == "\t")
            if(c1[sizeof(c1)-1] != " ")
              c1 += " ";
            else;
          else
            c1 += tmpstr[i];

        i = 0;
        while(c1[i] !~ $regexp("[0-9]"))
          i++;
        number = interval(c1, i) ~~ $regexp("([абвгab0-9]*)");

        i = sizeof(c1)-1;
        while(c1[i] != " ")
          i--;

        if((tmpstr = interval(c1, i+1) ~~ $regexp("([0-9.]*)")) == NULL)
        {
          printf("\nBad number:\n%s\nEnter number: ", subject);
          number = getline();
          printf("Enter date (dd.mm.yy): ");
          tmpstr = getline();
        }
      }
    }
    else	/* gropuname = "ugod" */
    {
      if (ugod_num == 0)
      {
        printf("\nUgoda:\n%s\nEnter: ", subject);
        number = getline();
        ugod_num = int(number ~~ $regexp("([0-9]*)"));

        printf("Enter date (dd.mm.yy): ");
        date = ugod_date = tmpstr = getline();
      }
      else
      {
        ugod_num++;
        number = sprintf ("%d", ugod_num);
        date = tmpstr = ugod_date;
      }
    }

    i = 0;
    date = tmpstr[i+1] == "." ? "0" : tmpstr[i++];
    date += tmpstr[i++];	/* second number of day */
    date += tmpstr[i++];	/* point */
    date += tmpstr[i+1] == "." ? "0" : tmpstr[i++];
    date += tmpstr[i++];	/* second number of month*/
    date += tmpstr[i++];	/* point */
    date += tmpstr[i++];	/* year */
    date += tmpstr[i++];	/* year */
    if(int (date[6]+date[7]) < 50 || sizeof(date) < 8 || date[2] != "."
		|| date[5] != "." || int (date[0]+date[1]) > 31 ||
		int (date[0]+date[1]) < 1 || int (date[3]+date[4]) > 12 ||
                int (date[3]+date[4]) < 1)
    {
      printf("\nBad subject:\n%s\nEnter number: ", subject);
      number = getline();
      printf("Enter date (dd.mm.yy): ");
      date = getline();
    }

	/* check file existing */
    do
    {
      filename = "f"+sprintf("%04d", int(number ~~ $regexp("([0-9]*)")))
					+"_"+interval(date, 6);
      i = 1;
      try
	tmpfile = fopen(mountdir+names[groupname]+"/"+filename+".hyp", "r");
      onerror
        i = 0;

      if(i && (argv[3] == "-g" || argv[2] == "-g") && groupname != "ugod")
      {
        close(tmpfile);
        i = 0;
      }
      if(i)
      {
        close(tmpfile);
        printf("file %s Exist!\n", names[groupname]+"/"+filename+".hyp");
        printf("%s\nCorrect: ", subject);
        if((tmpstr = getline()) == "g")
          i = 0;
        else
	{
	  number = tmpstr;
          printf("Correct date (dd.mm.yy): ");
          date = getline();
          filename = "";
        }
      }
    } while(i);
  }	/* if Subject */
  if(sizeof(s) == 0)	/* (there is empty line between title and law) */
  {
    article[numart] = struct
    (
      "num", number,
      "date", date,
      "year", int(date[6]+date[7]),
      "subj", subject,
      "fname", filename,
      "group", names[groupname],
      "fullname", names[groupname]+"/"+filename,
      "text", "",
      "lines_in_text", 0,
      "length", 0
    );
    printf("%s   \r", article[numart].fullname+".hyp");
    flush(stdout);
    exist[groupname]++;

# write new file
auto prevlen;
auto outfile;
    try
      outfile = fopen(mountdir+article[numart].fullname+".hyp", "w");
    onerror
      fail(sprintf("\nCan't open file %s.hyp\n", article[numart].fullname));

    lines = 0;
    while(((s = getline(infile)) != NULL) && (interval(s, 0, 5) != "From "))
    {
      if(!article[numart].length)
      {
        fprintf(outfile, "%s", s);
        for(i = sizeof(s); i < 80; i++)
          fprintf(outfile, " ");
        fprintf(outfile, "\033(%s1", article[numart].fullname);
      }
      else
        fprintf(outfile, "\n%s", s);
      if(lines++ == 20)
      {
        fprintf(outfile, "\n\014________\n");
        article[numart].length++;
        lines = 0;
      }
      prevlen = sizeof(s);
      article[numart].length++;
    }
    for(i = prevlen; i < 80; i++)
      fprintf(outfile, " ");
    fprintf(outfile, "\033)\n\014________\n");
    flush(outfile);
    close(outfile);
    numart++;
    if(s == NULL)
      break;
  }
}

/*
          1         2         3         4         5         6         7
0123456789012345678901234567890123456789012345678901234567890123456789012345678
  1. |     98 | 01.08.90 | Про забезпечення ў обслуговування Голови Верховно∙ |

   8         9         0         1
90123456789012345678901234567890123456789
[<06-13;t009800;postpr/t009800.hyp>
*/

# form texts

auto firstline;
auto col;
auto j, k;
auto word;

printf("Generating titles...\r");
flush(stdout);

for(i = 0; i < numart; i++)
{
  article[i].text = sprintf("     |%8s| %s |", article[i].num ~~
				$regexp("([^ ]*)"), article[i].date);
  tmpstr = article[i].subj;

  firstline = 1;
  col = 27;

  do
  {
    for(j = 0; tmpstr[j] == " "; j++);
    for(; j < sizeof(tmpstr) && tmpstr[j] != " "; j++);

    word = interval(tmpstr, 0, j);
    tmpstr = interval(tmpstr, j+1);

    if(col+sizeof(word) >= 78)
    {
      for(k = col; k < 79; k++)
        article[i].text += " ";
      article[i].text += "|";
      if(firstline == 1)
      {
        firstline = 0;
        article[i].text += sprintf("\033<06-13;%s1;%s>", article[i].fullname,
			article[i].fullname+".hyp");
      }
      article[i].text += "\n     |        |          |";
      article[i].lines_in_text++;
      col = 27;
    }
    article[i].text += " "+word;
    col += sizeof(word)+1;
  } while(sizeof(tmpstr) != 0);

  for(k = col; k < 79; k++)
    article[i].text += " ";
  article[i].text += "|";

  if(firstline == 1)
    article[i].text += sprintf("\033<06-13;%s1;%s>", article[i].fullname,
		article[i].fullname+".hyp");

  article[i].text += "\n";
  article[i].lines_in_text++;
}	/* i < numart */

printf("Generating titles...Done\n");
flush(stdout);

# modifing list files

auto key, value;
auto listfile, tmpfile;
auto curlines;
auto lines_in_text;
auto number_of_text;
auto togroup;
auto indextogroup, numtogroup;

forall(value, key in exist)
  if(value)
  {
    try
      listfile = fopen(mountdir+names[key]+"/"+names[key]+".hyp", "r");
    onerror
      fail(sprintf("\nCan't open file %s/%s.hyp\n", names[key], names[key]));

    try
      tmpfile = fopen(names[key]+".hyp", "w");
    onerror
      fail(sprintf("\nCan't open temp file ./%s.hyp\n", names[key]));

    close(listfile); 

    printf("Processing file %s.hyp (insert %d file%s)...Unpacking\r",
				names[key], value, value==1?"":"s");
    flush(stdout);
    system("gunzip -c "+mountdir+names[key]+"/"+names[key]+".hyp >"+
					names[key]+".hhh");
    listfile = fopen(names[key]+".hhh", "r");

    printf("Processing file %s.hyp (insert %d file%s)...Sorting  \r",
					names[key], value, value==1?"":"s");
    flush(stdout);
    /* go to begin list */
    curlines = 0;
    number_of_text = 1;
    do
    {
      s = getline(listfile);
      fprintf(tmpfile, "%s\n", s);
      curlines++;
    } while(s[0] != "-");

/* sorting articles */
    togroup = array();
    indextogroup = 0;
    numtogroup = 0;

    for(i = 0; i < numart; i++)
      if(article[i].group == names[key])
        togroup[numtogroup++] = struct
        (
          "num", int(article[i].num ~~ $regexp("([ 0-9]*)")),
          "year", article[i].year,
          "index", i
        );

    /* sorting (bubble) */
    auto m, pocket;
    for(i = 0; i < numtogroup; i++)
    {
      m = i;
      for(j = i+1; j < numtogroup; j++)
        if(togroup[j].year < togroup[m].year ||
		(togroup[j].year == togroup[m].year &&
			togroup[j].num < togroup[m].num))
          m = j;
      pocket = togroup[i]; togroup[i] = togroup[m]; togroup[m] = pocket;
    }
      
    printf("Processing file %s.hyp (insert %d file%s)...Writing\r",
				names[key], numtogroup, numtogroup==1?"":"s");
    flush(stdout);
    tmpstr = getline(listfile)+"\n";
    do
    {
      lines_in_text = 1;
      while(1)
      {
        s = getline(listfile)+"\n";
        if(s[0] == "-")
          break;
        if(toint(s[0]) == 0x0c)
          continue;
        if(!(s[0] == s[1] && s[1] == s[2] && s[2] == s[3] && s[3] == s[4]))
          break;	/* not continue string */
        tmpstr += s;
        lines_in_text++;
      }

      /* there is in tmpstr is text */
      if(indextogroup < numtogroup)
      {
        while(indextogroup < numtogroup &&
		(togroup[indextogroup].year < int(tmpstr[22]+tmpstr[23]) ||
		(togroup[indextogroup].year == int(tmpstr[22]+tmpstr[23]) &&
		togroup[indextogroup].num < int(interval(tmpstr, 6, 8) ~~
					$regexp("([ 0-9]*)")))))
        {
          i = togroup[indextogroup].index;
          if(curlines + article[i].lines_in_text > 19)
          {
            fprintf(tmpfile, "\014________\n");
            curlines = 0;
          }
	  fprintf(tmpfile, "%4d.%s", number_of_text,
			interval(article[i].text, 5));
	  number_of_text++;
	  curlines += article[i].lines_in_text;
	  indextogroup++;
	}
        if(indextogroup < numtogroup &&
		togroup[indextogroup].num == int(interval(tmpstr, 6, 8) ~~
					$regexp("([ 0-9]*)")))
	  indextogroup++;
      }
      if(curlines + lines_in_text > 19)
      {
        fprintf(tmpfile, "\014________\n");
        curlines = 0;
      }
      fprintf(tmpfile, "%4d.%s", number_of_text, interval(tmpstr, 5));
      number_of_text++;
      curlines += lines_in_text;
      tmpstr = s;
    } while(s[0] != "-"); /* till not end of list */

    while(indextogroup < numtogroup)	/* add latest laws */
    {
      i = togroup[indextogroup].index;
      if(curlines + article[i].lines_in_text > 19)
      {
        fprintf(tmpfile, "\014________\n");
        curlines = 0;
      }
      fprintf(tmpfile, "%4d.%s", number_of_text, interval(article[i].text, 5));
      number_of_text++;
      curlines += article[i].lines_in_text;
      indextogroup++;
    }

    s = interval(s, 0, sizeof(s)-1);
    do		/* put rest of file */
      fprintf(tmpfile, "%s\n", s);
    while((s = getline(listfile)) != NULL);

    flush(listfile);
    close(listfile);
    close (tmpfile);
    system("rm -f "+names[key]+".hhh");
    printf("Processing file %s.hyp (insert %d file%s)...Done       \n",
					names[key], value, value==1?"":"s");
  }	/* if value */

forall(value, key in exist)
  if(value)
  {
    printf("Moving files...%s.hyp           \r", names[key]);
    flush(stdout);
    system(sprintf("cp %s.hyp %s/%s.hyp", names[key],
				mountdir+names[key], names[key]));
  }
printf("Moving files...Done                 \n");

auto dfile;

try
  dfile = fopen(mountdir+dirfile, "a");
onerror
  fail(sprintf("\nCan't open file %s\n", dirfile));

system ("date >/tmp/.mail.ici");
auto datefile = fopen("/tmp/.mail.ici", "r");
s = getline(datefile);
close (datefile);
system("rm /tmp/.mail.ici");


printf("Processing file %s (insert %d files)\n", dirfile, numart);

for(i = 0; i < numart; i++)
  fprintf(dfile, "%s %s (%s.hyp) %%%d|%s1%%1#\n", article[i].fullname, s,
		article[i].fullname, article[i].length, article[i].fullname);
close(dfile);

printf("Done\n");
